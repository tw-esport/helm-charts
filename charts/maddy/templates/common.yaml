{{/* Make sure all variables are set properly */}}
{{- include "bjw-s.common.loader.init" . }}

{{/* if host is not set use internal postgres chart */}}
{{- if eq .Values.maddy.sql.postgres_dsn.host "" -}}
  {{- $_ := set .Values.maddy.sql.postgres_dsn "host" (printf "%s-postgresql" .Release.Name) -}}
{{- end -}}
{{/* if dbname is not set use internal postgres chart */}}
{{- if eq .Values.maddy.sql.postgres_dsn.dbname "" -}}
  {{- $_ := set .Values.maddy.sql.postgres_dsn "dbname" .Values.postgresql.postgresqlDatabase -}}
{{- end -}}
{{/* if user is not set use internal postgres chart */}}
{{- if eq .Values.maddy.sql.postgres_dsn.user "" -}}
  {{- $_ := set .Values.maddy.sql.postgres_dsn "user" .Values.postgresql.postgresqlUsername -}}
{{- end -}}
{{/* if password is not set use internal postgres chart */}}
{{- if eq .Values.maddy.sql.postgres_dsn.password "" -}}
  {{- $_ := set .Values.maddy.sql.postgres_dsn "password" .Values.postgresql.postgresqlPassword -}}
{{- end -}}

{{- define "maddy.postgresDsn" -}}
{{- range $option, $value := .Values.maddy.sql.postgres_dsn }}{{ $option }}='{{ $value }}' {{ end -}}
{{- end -}}
{{- $_ := set .Values.maddy.sql "postgres_dsn_line" (include "maddy.postgresDsn" . | trim | quote) -}}

{{/* Append the hardcoded settings */}}
{{- define "maddy.harcodedValues" -}}

configMaps:
  config:
    enabled: true
    data:
      maddy.conf: |
        {{ tpl (.Files.Get "files/maddy.conf") . | nindent 8 }}
      {{- range $configfile, $configfilecontent := .Values.maddy.config_files }}
      {{ tpl $configfile $ }}: |
        {{ tpl $configfilecontent $ | nindent 8 }}
      {{- end }}

persistence:
  config:
    enabled: true
    mountPath: /config
    type: configMap
    name: {{ include "bjw-s.common.lib.chart.names.fullname" . }}-config
  certificates:
    enabled: true
    mountPath: /certificates
    type: secret
    name: {{ tpl (.Values.maddy.tls_secret_name) .}}

initContainers:
  # -- Configures an initContainer that creates a VXLAN
  # In the gateway for client PODs to connect to.
  # iptables migh be (see VPN_BLOCK_OTHER_TRAFFIC) setup
  # to block traffic not going through the VPN
  routes:
    name: "linkconfig"
    # -- Image for the init container
    image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
    # -- Will be set automatically
    # @default -- <image.pullPolicy>
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    # -- Command starting DHCP server in the gateway
    command:
    - ln
    - -sfv
    - /config/maddy.conf
    - /data/
    volumeMounts:
    - name: config
      mountPath: /config
      readOnly: true
    - name: data
      mountPath: /data

{{- end -}}
{{- $_ := mergeOverwrite .Values (include "maddy.harcodedValues" . | fromYaml) -}}

{{ include "bjw-s.common.loader.all" . }}
